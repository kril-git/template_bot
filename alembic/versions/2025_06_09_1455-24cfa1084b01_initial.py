"""Initial

Revision ID: 24cfa1084b01
Revises: 1d72d0c51d2d
Create Date: 2025-06-09 14:55:06.531327

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "24cfa1084b01"
down_revision: Union[str, None] = "1d72d0c51d2d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "quiz",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=100), nullable=False),
        sa.Column("title", sa.String(length=150), nullable=True),
        sa.Column("type", sa.String(length=10), nullable=True),
        sa.Column("question", sa.String(length=300), nullable=True),
        sa.Column("correct_option_id", sa.Integer(), nullable=True),
        sa.Column(
            "date_create",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("is_anonymous", sa.Boolean(), nullable=False),
        sa.Column("date_start", sa.DateTime(timezone=True), nullable=False),
        sa.Column("date_end", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "quiz_options",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("quiz_id", sa.Integer(), nullable=False),
        sa.Column("option_id", sa.Integer(), nullable=True),
        sa.Column("correct_option_id", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["quiz_id"],
            ["quiz.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "users",
        "last_visit",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "last_visit",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.drop_table("quiz_options")
    op.drop_table("quiz")
    # ### end Alembic commands ###
